import tkinter as tk
from tkinter import messagebox, filedialog
import csv
from datetime import datetime
import pandas as pd
CSV_FILE = "nhan_vien.csv"
def save_to_csv(data):
    try:
        with open(CSV_FILE, mode="a", newline="", encoding="utf-8") as file:
            writer = csv.writer(file)
            writer.writerow(data)
        messagebox.showinfo("Thành công", "Thông tin đã được lưu.")
    except Exception as e:
        messagebox.showerror("Lỗi", f"Không thể lưu dữ liệu: {e}")
def on_save():
    ma_nv = entry_ma.get()
    ten_nv = entry_ten.get()
    ngay_sinh = entry_ngay_sinh.get()
    gioi_tinh = gender_var.get()

    if not ma_nv or not ten_nv or not ngay_sinh:
        messagebox.showwarning("Cảnh báo", "Vui lòng nhập đầy đủ thông tin.")
        return

    try:
        datetime.strptime(ngay_sinh, "%d/%m/%Y")  # Kiểm tra định dạng ngày
    except ValueError:
        messagebox.showwarning("Cảnh báo", "Ngày sinh không hợp lệ. Định dạng: dd/mm/yyyy")
        return

    save_to_csv([ma_nv, ten_nv, ngay_sinh, gioi_tinh])
def show_today_birthdays():
    try:
        today = datetime.now().strftime("%d/%m")
        results = []

        with open(CSV_FILE, mode="r", encoding="utf-8") as file:
            reader = csv.reader(file)
            for row in reader:
                if len(row) < 3:
                    continue
                ngay_sinh = row[2]
                if today in ngay_sinh:
                    results.append(row)

        if results:
            result_text = "\n".join([", ".join(row) for row in results])
            messagebox.showinfo("Sinh nhật hôm nay", result_text)
        else:
            messagebox.showinfo("Sinh nhật hôm nay", "Không có nhân viên nào sinh nhật hôm nay.")
    except Exception as e:
        messagebox.showerror("Lỗi", f"Không thể đọc dữ liệu: {e}")
def export_to_excel():
    try:
        df = pd.read_csv(CSV_FILE, names=["Mã NV", "Tên", "Ngày sinh", "Giới tính"])
        df["Tuổi"] = df["Ngày sinh"].apply(lambda x: datetime.now().year - datetime.strptime(x, "%d/%m/%Y").year)
        df = df.sort_values(by="Tuổi", ascending=False)

        save_path = filedialog.asksaveasfilename(defaultextension=".xlsx", filetypes=[("Excel files", "*.xlsx")])
        if save_path:
            df.to_excel(save_path, index=False)
            messagebox.showinfo("Thành công", f"Danh sách đã được xuất ra {save_path}")
    except Exception as e:
        messagebox.showerror("Lỗi", f"Không thể xuất file Excel: {e}")
root = tk.Tk()
root.title("Quản lý nhân viên")
tk.Label(root, text="Mã nhân viên:").grid(row=0, column=0, padx=10, pady=5)
entry_ma = tk.Entry(root)
entry_ma.grid(row=0, column=1, padx=10, pady=5)

tk.Label(root, text="Tên nhân viên:").grid(row=1, column=0, padx=10, pady=5)
entry_ten = tk.Entry(root)
entry_ten.grid(row=1, column=1, padx=10, pady=5)

tk.Label(root, text="Ngày sinh (dd/mm/yyyy):").grid(row=2, column=0, padx=10, pady=5)
entry_ngay_sinh = tk.Entry(root)
entry_ngay_sinh.grid(row=2, column=1, padx=10, pady=5)

tk.Label(root, text="Giới tính:").grid(row=3, column=0, padx=10, pady=5)
gender_var = tk.StringVar(value="Nam")
tk.Radiobutton(root, text="Nam", variable=gender_var, value="Nam").grid(row=3, column=1, sticky="w")
tk.Radiobutton(root, text="Nữ", variable=gender_var, value="Nữ").grid(row=3, column=1, sticky="e")

btn_save = tk.Button(root, text="Lưu", command=on_save)
btn_save.grid(row=4, column=0, padx=10, pady=10)

btn_birthdays = tk.Button(root, text="Sinh nhật hôm nay", command=show_today_birthdays)
btn_birthdays.grid(row=4, column=1, padx=10, pady=10)

btn_export = tk.Button(root, text="Xuất danh sách", command=export_to_excel)
btn_export.grid(row=5, column=0, columnspan=2, pady=10)

root.mainloop()
